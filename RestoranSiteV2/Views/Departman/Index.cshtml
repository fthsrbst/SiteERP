@using RestoranSiteV2.Models.Siniflar
@model List<Departman>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<style>
    /* CSS to fix the popup and prevent shifting */
    #popupModal {
        position: fixed;
        top: 20px; /* Adjust the position if needed */
        left: 50%;
        transform: translateX(-50%);
        z-index: 1050; /* Make sure it is on top of other elements */
    }

    #excelExportButton {
        position: relative;
        z-index: 10; /* Ensure the button stays above background elements */
    }

    .modal-content {
        border-radius: 20px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        overflow: hidden;
    }

    .modal-header {
        background: linear-gradient(45deg, #4e73df, #1cc88a);
        color: white;
        font-weight: bold;
        text-align: center;
        border-bottom: none;
        position: relative;
        padding-right: 2.5rem; /* Sağ tarafı kapatma butonuna yer bırakmak için ayarlayın */
    }

        .modal-header .btn-close {
            position: absolute;
            top: 50%;
            right: 1rem;
            transform: translateY(-50%);
            background-color: #fff; /* Butonun arka planını beyaz yap */
            border-radius: 50%; /* Yuvarlak görünüm */
            border: 1px solid #ddd; /* Hafif bir kenarlık ekleyin */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Hafif gölge */
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }

            .modal-header .btn-close:hover {
                background-color: #f8f9fa; /* Hover sırasında açık gri */
                border-color: #ccc; /* Kenarlık rengini açık gri yap */
            }

            .modal-header .btn-close::before {
                content: '×'; /* Çarpı sembolü */
                font-size: 20px;
                font-weight: bold;
                color: #4e73df; /* Gradient ile uyumlu renk */
            }

    .modal-footer {
        border-top: none;
    }

    .modal-body input {
        border-radius: 10px;
        padding: 10px 15px;
        border: 1px solid #ddd;
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
        font-size: 16px;
    }

    .modal-footer .btn {
        border-radius: 10px;
        font-weight: bold;
        padding: 10px 20px;
    }

    .modal-footer .btn-primary {
        background-color: #4e73df;
        border-color: #4e73df;
    }

    .modal-footer .btn-secondary {
        background-color: #f8f9fa;
        color: #6c757d;
        border-color: #ddd;
    }

    .modal-footer .btn-primary:hover {
        background-color: #2e59d9;
        border-color: #2653d4;
    }

    #departmanChart {
        position: relative; /* Ensure it has a positioning context */
        z-index: 10; /* Set a higher z-index */
        transition: none;
    }

    table.dataTable th,
    table.dataTable td {
        border: none !important; /* Kenarlıkları kaldır */
    }



    .dropdown-menu i {
        margin-right: 8px; /* Add some space between icon and text */
    }

    .dropdown-menu .dropdown-item {
        display: flex; /* Align the icon and text horizontally */
        align-items: center;
    }

    .card {
        z-index: 1;
        margin: 20px;
        border-radius: 15px; /* Köşeleri yuvarla */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Hafif gölge ekle */
        transition: width 0.3s ease, border-radius 0.3s ease; /* Transition for width and border-radius */
        overflow: hidden; /* Prevent content overflow during animation */
        position: relative; /* Kartın yer değiştirmesini engellemek için relative position ekliyoruz */
        width: 100%; /* Kartın başlangıç genişliği */
    }

        .card.expanded {
            width: 100%; /* Kart tamamen genişlesin */
            z-index: 10; /* Diğer kartların üstünde olmasını sağlamak için z-index ekliyoruz */
        }

    .card-body {
        margin-top: 20px;
        padding-top: 0px;
        padding-bottom: 0px;
        overflow: visible;
    }

    .card-header {
        background: linear-gradient(45deg, #4e73df, #1cc88a); /* Gradient arka plan */
        color: #fff;
        font-weight: bold;
        border-radius: 15px 15px 0 0;
    }

        .card-header .text-primary {
            color: white !important; /* Yazı rengi beyaz olacak */
        }

    .btn {
        border-radius: 8px; /* Buton köşelerini yuvarla */
        font-weight: bold;
        transition: all 0.3s ease; /* Hover geçişi */
    }

    .btn-primary {
        background-color: #4e73df;
        border-color: #4e73df;
    }

        .btn-primary:hover {
            background-color: #2e59d9;
            border-color: #2653d4;
        }

    .btn-outline-success:hover {
        background-color: #1cc88a;
        color: white;
    }



    /* Buton stilleri */
    a.btn-primary {
        background-color: #4e73df;
        border-color: #4e73df;
    }

        a.btn-primary:hover {
            background-color: #2e59d9;
            border-color: #2653d4;
        }

    a.btn-outline-success {
        border-color: #1cc88a;
        color: #1cc88a;
    }

        a.btn-outline-success:hover {
            background-color: #1cc88a;
            color: white;
        }

    a.btn-outline-primary {
        border-color: #4e73df;
        color: #4e73df;
    }

        a.btn-outline-primary:hover {
            background-color: #4e73df;
            color: white;
        }

    a.btn-outline-danger {
        border-color: #e74a3b;
        color: #e74a3b;
    }

        a.btn-outline-danger:hover {
            background-color: #e74a3b;
            color: white;
        }
</style>
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://cdn.datatables.net/2.1.8/js/dataTables.min.js"></script>
<script src="https://cdn.datatables.net/2.1.8/js/dataTables.bootstrap5.min.js"></script>

<link href="https://cdn.datatables.net/2.1.8/css/dataTables.bootstrap5.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>

<!-- FontAwesome for icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

<!-- DataTales Example -->
<div class="d-flex justify-content-between">
    <div class="card shadow mb-4">
        <div class="card-header py-3" data-expanded="false">
            <h6 class="m-0 font-weight-bold text-primary">Departman Tablosu</h6>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">

                <!-- Left-aligned "Yeni Departman Ekle" button -->
                <a href="javascript:void(0);" class="btn btn-primary" data-toggle="modal" data-target="#DepartmanEkleModal">Yeni Departman Ekle</a>

                <div>
                    <!-- Right-aligned "İndir" button -->
                    <a href="javascript:void(0);" id="excelExportButton" class="btn btn-outline-success">İndir</a>

                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="dataTable">
                        <thead>
                            <tr>
                                <th>İşlemler</th>
                                <th>ID</th>
                                <th>Departman Adı</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var k in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="dropdown">
                                            <button class="btn btn-outline-secondary" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="fas fa-bars"></i>
                                            </button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                <a href="/Departman/DepartmanDetay/@k.Departmanid" class="dropdown-item">
                                                    <i class="fas fa-info-circle text-dark"></i> Detay
                                                </a>
                                                <a href="/Departman/DepartmanGetir/@k.Departmanid" class="dropdown-item">
                                                    <i class="fas fa-edit text-primary"></i> Güncelle
                                                </a>
                                                <a href="/Departman/DepartmanSil/@k.Departmanid" class="dropdown-item">
                                                    <i class="fas fa-trash text-danger"></i> Sil
                                                </a>

                                            </div>
                                        </div>
                                    </td>
                                    <td>@k.Departmanid</td>
                                    <td>@k.DepartmanAd</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Kategoriye Ait Ürün Sayıları</h6>
        </div>
        <div class="card-body">
            <div id="departmanChart"></div>

        </div>
    </div>
</div>

<div class="modal fade" id="DepartmanEkleModal" tabindex="-1" role="dialog" aria-labelledby="DepartmanEkleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color:white;" id="DepartmanEkleModalLabel">Yeni Departman Ekle</h5>
            </div>
            <div class="modal-body">
                <form id="departmanEkleForm" action="/Departman/YeniDepartman" method="post">
                    <div class="form-group">
                        <label for="departmanAd">Departman Adı</label>
                        <input type="text" class="form-control" id="departmanAd" name="DepartmanAd" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" style="margin-right:5px;" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="submit" id="DepartmanEkleSubmit" class="btn btn-primary">Kaydet</button>
            </div>
        </div>
    </div>
</div>



<script>
    $('#dataTable').DataTable({
        "language": {
            "search": "Ara:",
            "lengthMenu": "Her sayfada _MENU_ kayıt göster",
            "zeroRecords": "Eşleşen kayıt bulunamadı",
            "info": "Toplam _TOTAL_ kayıt arasından _START_ - _END_ arası gösteriliyor",
            "infoEmpty": "Kayıt yok",
            "infoFiltered": "(_MAX_ kayıt içinden filtrelendi)",
            "paginate": {
                "first": "İlk",
                "last": "Son",
                "next": "Sonraki",
                "previous": "Önceki"
            }
        },
         "lengthMenu": [5, 10, 25, 50, 100]
    });

    $(document).on('click', '#DepartmanEkleSubmit', function (e) {
        e.preventDefault();

        // Form verilerini doğru şekilde alıyoruz
        var formData = $('#departmanEkleForm').serialize();

        $.ajax({
            url: '/Departman/YeniDepartman',
            type: 'POST',
            data: formData,
            success: function (response) {
                alert('Departman başarıyla kaydedildi!');
                $('#DepartmanEkleModal').modal('hide');
                location.reload(); // Sayfayı yenilemek için
            },
            error: function () {
                alert('Bir hata oluştu.');
            }
        });
    });


    $(document).ready(function () {
        // Kart header'ına tıklandığında animasyonu başlatıyoruz
        $('.card-header').on('click', function () {
            var card = $(this).closest('.card');
            var isExpanded = $(this).data('expanded'); // Kartın genişleyip genişlemediğini kontrol ediyoruz

            if (isExpanded) {
                // Kartı daraltıyoruz
                card.removeClass('expanded').animate({
                    width: '47%' // Başlangıç genişliği
                }, 300);
                $(this).data('expanded', false);
            } else {
                // Kartı genişletiyoruz
                card.addClass('expanded').animate({
                    width: '150%' // Tam genişlik
                }, 300);
                $(this).data('expanded', true);
            }
        });
    });


    $(document).ready(function () {
    // Fetch the department data and render the chart
    $.ajax({
        url: '@Url.Action("GetDepartmanPersonelSayilari", "Departman")', // Yeni metot URL'i
        method: 'GET',
        success: function (grafikVerisi) {
            // Veriyi kontrol et
            console.log(grafikVerisi);

            // Departman adları ve personel sayıları
            var departmanAdlari = grafikVerisi.map(function (d) { return d.departmanAd; });
            var personelSayilari = grafikVerisi.map(function (d) { return d.personelSayisi; });

            // Grafik seçenekleri
            var options = {
                chart: {
                    type: 'bar',
                    height: 350
                },
                series: [{
                    name: 'Personel Sayısı',
                    data: personelSayilari
                }],
                xaxis: {
                    categories: departmanAdlari
                },
                dataLabels: {
                    enabled: true
                },
                title: {
                    text: 'Departmanlara Göre Personel Sayısı',
                    align: 'center',
                    style: {
                        fontSize: '18px',
                        fontWeight: 'bold',
                        color: '#333'
                    }
                }
            };

            // Grafiği başlat ve render et
            var chart = new ApexCharts(document.querySelector("#departmanChart"), options);
            chart.render();
        },
        error: function (error) {
            console.error("Data fetch failed:", error);
        }
    });
});

    $(document).ready(function () {
        // Excel export button functionality
        $('#excelExportButton').on('click', function () {
            // Get the table element
            var table = document.getElementById('dataTable');

            // Create a new Workbook
            var wb = XLSX.utils.table_to_book(table, { sheet: "Departmanlar" });

            // Generate Excel file and trigger download
            XLSX.writeFile(wb, 'departmanlar.xlsx');
        });
    });


    $(document).ready(function () {
        $('#departmanEkleSubmit').on('click', function (e) {
            e.preventDefault(); // Formun varsayılan gönderimini engeller.

            // Form verilerini al
            var formData = {
                DepartmanAd: $('#departmanAd').val()
            };

            // AJAX ile sunucuya gönder
            $.ajax({
                url: '/Departman/YeniDepartman', // Departman ekleme için sunucu tarafındaki URL
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    // Başarılı ekleme durumu
                    alert('Departman başarıyla eklendi!');
                    $('#departmanEkleModal').modal('hide'); // Modalı kapat
                    location.reload(); // Sayfayı yenile veya tabloyu güncelle
                },
                error: function (error) {
                    // Hata durumu
                    console.error('Departman eklenirken bir hata oluştu:', error);
                    alert('Departman eklenirken bir hata oluştu. Lütfen tekrar deneyin.');
                }
            });
        });
    });
</script>
